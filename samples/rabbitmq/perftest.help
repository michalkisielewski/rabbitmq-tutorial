### http://github.com/rabbitmq/rabbitmq-perf-test

### docker run -it --rm pivotalrabbitmq/perf-test --help --env
#
For multi-value options, separate values with commas, e.g. VARIABLE_RATE='100:60,1000:10,500:15'
AUTO_DELETE                    should the queue be auto-deleted, default
                               is true
AUTOACK                        auto ack
BODY                           comma-separated list of files to use in
                               message bodies
BODY_CONTENT_TYPE              body content-type
BODY_COUNT                     number of pre-generated message bodies.
                               Use with --json-body. Default is 100.
BODY_FIELD_COUNT               number of pre-generated fields and values
                               for body. Use with --json-body. Default is
                               1000.
CMESSAGES                      consumer message count
CONFIRM                        max unconfirmed publishes
CONFIRM_TIMEOUT                waiting timeout for unconfirmed publishes
                               before failing (in seconds)
CONNECTION_RECOVERY_INTERVAL   connection recovery interval in seconds.
                               Default is 5 seconds. Interval syntax,
                               e.g. 30-60, is supported to specify an
                               random interval between 2 values between
                               each attempt.
CONSUMER_ARGS                  consumer arguments as key/values pairs,
                               separated by commas, e.g. x-priority=10
CONSUMER_CHANNEL_COUNT         channels per consumer
CONSUMER_LATENCY               consumer latency in microseconds
CONSUMER_RATE                  consumer rate limit
CONSUMERS                      consumer count
CONSUMERS_THREAD_POOLS         number of thread pools to use for all
                               consumers, default is to use a thread pool
                               for each consumer
CTXSIZE                        consumer tx size
DISABLE_CONNECTION_RECOVERY    disable automatic connection recovery
EXCHANGE                       exchange name
EXCLUSIVE                      use server-named exclusive queues. Such
                               queues can only be used by their declaring
                               connection!
FLAG                           message flag(s), supported values:
                               persistent and mandatory. Use the option
                               several times to specify several values.
FRAMEMAX                       frame max
GLOBAL_QOS                     channel prefetch count
HEARTBEAT                      heartbeat interval
HEARTBEAT_SENDER_THREADS       number of threads for producers and
                               consumers heartbeat senders
ID                             test ID
INTERVAL                       sampling interval in seconds
JSON_BODY                      generate a random JSON document for
                               message body. Use with --size.
LEGACY_METRICS                 display legacy metrics (min/avg/max
                               latency)
MESSAGE_PROPERTIES             message properties as key/value pairs,
                               separated by commas, e.g. priority=5
METRICS_HELP                   show metrics usage
MULTI_ACK_EVERY                multi ack every
NACK                           nack and requeue messages
NIO_THREAD_POOL                size of NIO thread pool, should be
                               slightly higher than number of NIO threads
NIO_THREADS                    number of NIO threads to use
OUTPUT_FILE                    output file for timing results
PMESSAGES                      producer message count
POLLING                        use basic.get to consume messages. Do not
                               use this in real applications.
POLLING_INTERVAL               time to wait before polling with
                               basic.get, in millisecond, default is 0.
PREDECLARED                    allow use of predeclared objects
PRODUCER_CHANNEL_COUNT         channels per producer
PRODUCER_RANDOM_START_DELAY    max random delay in seconds to start
                               producers
PRODUCER_SCHEDULER_THREADS     number of threads to use when using
                               --publishing-interval
PRODUCERS                      producer count
PTXSIZE                        producer tx size
PUBLISHING_INTERVAL            publishing interval in seconds (opposite
                               of producer rate limit)
QOS                            consumer prefetch count
QUEUE                          queue name
QUEUE_ARGS                     queue arguments as key/value pairs,
                               separated by commas, e.g. x-max-length=10
QUEUE_PATTERN                  queue name pattern for creating queues in
                               sequence
QUEUE_PATTERN_FROM             queue name pattern range start (inclusive)
QUEUE_PATTERN_TO               queue name pattern range end (inclusive)
RANDOM_ROUTING_KEY             use random routing key per message
RATE                           producer rate limit
ROUTING_KEY                    routing key
ROUTING_KEY_CACHE_SIZE         size of the random routing keys cache. See
                               --random-routing-key.
SASL_EXTERNAL                  use SASL EXTERNAL authentication, default
                               is false. Set to true if using client
                               certificate authentication with the
                               rabbitmq_auth_mechanism_ssl plugin.
SERVERS_STARTUP_TIMEOUT        start timeout in seconds (in case the
                               servers(s) is (are) not available when the
                               run starts). Default is to fail
                               immediately if the servers(s) is (are) not
                               available.
SERVERS_UP_LIMIT               number of available servers needed before
                               starting the run. Used in conjunction with
                               --servers-start-timeout. Default is
                               deduced from --uri or --uris.
SHUTDOWN_TIMEOUT               shutdown timeout, default is 5 seconds
SIZE                           message size in bytes
SKIP_BINDING_QUEUES            don't bind queues to the exchange
SLOW_START                     start consumers slowly (1 sec delay
                               between each)
TIME                           run duration in seconds (unlimited by
                               default)
TYPE                           exchange type
URI                            connection URI
URIS                           connection URIs (separated by commas)
USE_DEFAULT_SSL_CONTEXT        use JVM default SSL context
USE_MILLIS                     should latency be collected in
                               milliseconds, default is false. Set to
                               true if producers are consumers run on
                               different machines.
VARIABLE_LATENCY               variable consumer processing latency with
                               [MICROSECONDS]:[DURATION] syntax, where
                               [MICROSECONDS] integer >= 0 and [DURATION]
                               integer > 0. Use the option several times
                               to specify several values.
VARIABLE_RATE                  variable publishing rate with
                               [RATE]:[DURATION] syntax, where [RATE]
                               integer >= 0 and [DURATION] integer > 0.
                               Use the option several times to specify
                               several values.
VARIABLE_SIZE                  variable message size with
                               [SIZE]:[DURATION] syntax, where [SIZE]
                               integer > 0 and [DURATION] integer > 0.
                               Use the option several times to specify
                               several values.

### docker run -it --rm pivotalrabbitmq/perf-test --metrics-help --env
#
METRICS_CLASS_LOADER              enable JVM class loader metrics
METRICS_CLIENT                    enable client metrics
METRICS_DATADOG                   enable Datadog metrics
METRICS_DATADOG_API_KEY           Datadog API key
METRICS_DATADOG_APPLICATION_KEY   Datadog application key
METRICS_DATADOG_DESCRIPTIONS      if meter descriptions should be sent to
                                  Datadog
METRICS_DATADOG_HOST_TAG          tag that will be mapped to "host" when
                                  shipping metrics to datadog
METRICS_DATADOG_STEP_SIZE         step size (reporting frequency) to use
                                  in seconds, default is 10 seconds
METRICS_DATADOG_URI               URI to ship metrics, useful when using
                                  a proxy, default is
                                  https://app.datadoghq.com
METRICS_JMX                       enable JMX metrics
METRICS_JVM_GC                    enable JVM GC metrics
METRICS_JVM_MEMORY                enable JVM memory metrics
METRICS_JVM_THREAD                enable JVM thread metrics
METRICS_PREFIX                    prefix for PerfTest metrics, default is
                                  perftest_
METRICS_PROCESSOR                 enable processor metrics (gathered by
                                  JVM)
METRICS_PROMETHEUS                enable Prometheus metrics
METRICS_PROMETHEUS_ENDPOINT       the HTTP metrics endpoint, default is
                                  /metrics
METRICS_PROMETHEUS_PORT           the port to launch the HTTP metrics
                                  endpoint on, default is 8080
METRICS_TAGS                      metrics tags as key-value pairs
                                  separated by commas
